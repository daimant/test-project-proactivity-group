{"version":3,"sources":["Components/Favorites/Favorites.module.css","Components/ServiceList/ServiceList.module.css","Components/common/ServiceItem/ServiceItem.module.css","serviceWorker.js","Redux/navigations-reducer.js","api/api.js","Redux/service-list-reducer.js","Redux/favorites-reducer.js","Redux/store.jsx","Components/common/ServiceItem/ServiceItem.jsx","Components/ServiceList/ServiceList.jsx","Redux/selectors.js","Components/ServiceList/ServiceListContainer.jsx","Components/Favorites/Favorites.jsx","Components/Favorites/FavoritesContainer.js","Components/NavBar/NavBar.jsx","Components/NavBar/NavBarContainer.js","App.js","AppContainer.jsx","AppShopServices.js","index.js","Components/NavBar/NavBar.module.css"],"names":["module","exports","Boolean","window","location","hostname","match","initialStore","link","text","navigationsReducer","state","instance","axios","baseURL","servicesAPI","currentPage","get","then","response","data","type","countSort","sortDirect","sortType","current_page","favorites","setServices","services","sort","serviceListReducer","action","length","some","el","id","filter","findIndex","favoritesReducer","reducers","combineReducers","navigationsData","serviceListData","favoritesData","store","createStore","applyMiddleware","thunkMiddleware","ServiceItem","number","removeFromFavorites","addToFavorites","className","isSponsor","classes","serviceItem","logotype","image","src","alt","firstLettersOfName","name","title","partners","partnersCount","projects","worksCount","rate","changer","checkbox","onChange","checked","element","onClick","ServiceList","serviceData","totalServices","lastUpdateDate","requestNextServicesList","serviceList","serviceListHeader","about","itemsHeader","activeButton","map","i","key","downloadButton","getService","getCurrentPage","getLastUpdateDate","getTotalServices","total","getCountSort","getFavorites","getSortType","getSortDirect","ServiceListContainer","this","props","requestServices","Component","connect","page","dispatch","a","sortDirection","Favorites","favoritesHeader","nothing","FavoritesContainer","NavBar","nav","firstRow","secondRow","item","active","to","activeClassName","activeLink","countPages","NavBarContainer","App","basename","exact","path","render","AppContainer","compose","withRouter","AppShopServices","StrictMode","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.448b22fc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"favorites\":\"Favorites_favorites__3esbM\",\"favoritesHeader\":\"Favorites_favoritesHeader__376XR\",\"nothing\":\"Favorites_nothing__3EVQ4\",\"logotype\":\"Favorites_logotype__2pOIN\",\"name\":\"Favorites_name__ElmLL\",\"partners\":\"Favorites_partners__2yOoi\",\"projects\":\"Favorites_projects__cT1vf\",\"rate\":\"Favorites_rate__1tjdF\",\"changer\":\"Favorites_changer__27gsa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"serviceList\":\"ServiceList_serviceList__2PvgX\",\"serviceListHeader\":\"ServiceList_serviceListHeader__161r7\",\"itemsHeader\":\"ServiceList_itemsHeader__TOgfX\",\"about\":\"ServiceList_about__1aflN\",\"partners\":\"ServiceList_partners___2VaC\",\"projects\":\"ServiceList_projects__30MG-\",\"rate\":\"ServiceList_rate__HDJv9\",\"changer\":\"ServiceList_changer__2cIuv\",\"activeButton\":\"ServiceList_activeButton__2Vqfo\",\"downloadButton\":\"ServiceList_downloadButton__1fck9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"isSponsor\":\"ServiceItem_isSponsor__2W_C6\",\"serviceItem\":\"ServiceItem_serviceItem__1IW2x\",\"number\":\"ServiceItem_number__3IsvV\",\"logotype\":\"ServiceItem_logotype__MUbx0\",\"name\":\"ServiceItem_name__CS-lc\",\"partners\":\"ServiceItem_partners__2O-oX\",\"projects\":\"ServiceItem_projects__39HDf\",\"rate\":\"ServiceItem_rate__3p8Ya\",\"changer\":\"ServiceItem_changer__dY9JB\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // FavoriteItem worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","let initialStore = [\n  { link: \"/service-list\", text: \"Список сервисов\" },\n  { link: \"/favorites\", text: \"Избранное\" },\n];\n\nconst navigationsReducer = (state = initialStore, action) => {\n  // if (action) console.log(action);\n  return state;\n};\n\nexport default navigationsReducer;\n","import * as axios from \"axios\";\n\nconst instance = axios.create({\n  baseURL: \"https://api.cmsmagazine.ru/v1/\",\n});\nexport const servicesAPI = {\n  getServices: (currentPage) => {\n    return instance\n      .get(\n        `instrumentsList?instrument_type_code=cms&page=${currentPage}&sort_direction=desc&sort=partners_count`\n      )\n      .then((response) => response.data);\n  },\n  getSortServices: (type, countSort = 0) => {\n    return instance\n      .get(\n        `instrumentsList?instrument_type_code=cms&page=1&sort_direction=${\n          countSort % 2 ? \"asc\" : \"desc\"\n        }&sort=${type}`\n      )\n      .then((response) => response.data);\n  },\n  getNextPage: (currentPage, sortDirect, sortType) => {\n    return instance\n      .get(\n        `instrumentsList?instrument_type_code=cms&page=${currentPage}&sort_direction=${sortDirect}&sort=${sortType}`\n      )\n      .then((response) => response.data);\n  },\n};\n\n// &sort_direction=desc &sort=rate\n","import { servicesAPI } from \"../api/api\";\n\nconst SET_SERVICES = \"SET_SERVICES\";\nconst ADD_TO_FAVORITES = \"ADD_TO_FAVORITES\";\nconst REMOVE_FROM_FAVORITES = \"REMOVE_FROM_FAVORITES\";\nconst SET_NEXT_PAGE = \"SET_NEXT_PAGE\";\n\nlet initialStore = {\n  current_page: 1,\n  data: [],\n  favorites: [],\n  countSort: 1,\n  sortType: \"partners_count\",\n  sortDirect: \"desc\",\n};\n\nconst serviceListReducer = (state = initialStore, action) => {\n  switch (action.type) {\n    case SET_SERVICES:\n      if (action.sort) {\n        return {\n          ...state,\n          data: [...action.services.data],\n          current_page: action.services.current_page,\n          countSort: state.countSort + 1,\n          sortType: action.sortType,\n          sortDirect: action.countSort % 2 ? \"asc\" : \"desc\",\n          ...state.favorites,\n        };\n      } else if (state.data.length) {\n        return {\n          ...state,\n          data: [...state.data, ...action.services.data],\n          current_page: action.services.current_page,\n        };\n      } else return { ...state, ...action.services };\n\n    case ADD_TO_FAVORITES:\n      if (state.favorites.some((el) => el.id === action.id)) {\n        return {\n          ...state,\n          favorites: [...state.favorites].filter((el) => el.id !== action.id),\n        };\n      } else\n        return {\n          ...state,\n          favorites: [\n            ...state.favorites,\n            state.data[state.data.findIndex((el) => el.id === action.id)],\n          ],\n        };\n\n    case REMOVE_FROM_FAVORITES:\n      return {\n        ...state,\n        favorites: [...state.favorites].filter((el) => el.id !== action.id),\n      };\n\n    case SET_NEXT_PAGE:\n      return {\n        ...state,\n        data: [...state.data, ...action.data.data],\n        current_page: action.data.current_page,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const setNextPage = (data) => ({ type: SET_NEXT_PAGE, data });\nexport const removeFromFavorites = (id) => ({\n  type: REMOVE_FROM_FAVORITES,\n  id,\n});\nexport const addToFavorites = (id) => ({ type: ADD_TO_FAVORITES, id });\nexport const setServices = (\n  services,\n  sort = false,\n  sortType = \"partners_count\",\n  countSort = \"desc\"\n) => ({\n  type: SET_SERVICES,\n  services,\n  sort,\n  sortType,\n  countSort,\n});\nexport const requestServices = (page) => async (dispatch) => {\n  const response = await servicesAPI.getServices(page);\n  dispatch(setServices(response));\n};\nexport const requestNextServicesList = (\n  currentPage,\n  sortDirection,\n  sortType\n) => async (dispatch) => {\n  const response = await servicesAPI.getNextPage(\n    currentPage,\n    sortType,\n    sortDirection\n  );\n  dispatch(setNextPage(response));\n};\nexport const sort = (sortType, countSort) => async (dispatch) => {\n  const response = await servicesAPI.getSortServices(sortType, countSort);\n  dispatch(setServices(response, true, sortType, countSort));\n};\n\nexport default serviceListReducer;\n","let initialStore = [];\n\nconst favoritesReducer = (state = initialStore, action) => {\n  // if (action) console.log(action);\n  return state;\n};\n\nexport default favoritesReducer;\n","import { applyMiddleware, combineReducers, createStore } from \"redux\";\r\nimport navigationsReducer from \"./navigations-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport serviceListReducer from \"./service-list-reducer\";\r\nimport favoritesReducer from \"./favorites-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n  navigationsData: navigationsReducer,\r\n  serviceListData: serviceListReducer,\r\n  favoritesData: favoritesReducer,\r\n});\r\n\r\nconst store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport classes from \"./ServiceItem.module.css\";\n\nconst ServiceItem = ({\n  number,\n  el,\n  removeFromFavorites,\n  addToFavorites,\n  favorites,\n}) => {\n  return (\n    <div\n      className={\n        el.isSponsor\n          ? `${classes.serviceItem} ${classes.isSponsor}`\n          : classes.serviceItem\n      }\n    >\n      <span className={classes.number}>\n        {!removeFromFavorites && number + 1}\n      </span>\n      <span className={classes.logotype}>\n        {el.image && <img src={el.image} alt=\"\" />}\n        {!el.image && el.firstLettersOfName}\n      </span>\n      <span className={classes.name}>{el.title}</span>\n      <span className={classes.partners}>{el.partnersCount}</span>\n      <span className={classes.projects}>{el.worksCount}</span>\n      <span className={classes.rate}>{!!el.rate && el.rate}</span>\n      <span className={classes.changer}>\n        {addToFavorites && (\n          <input\n            className={classes.checkbox}\n            type=\"checkbox\"\n            onChange={() => addToFavorites(el.id)}\n            checked={favorites.some((element) => element.id === el.id)}\n          />\n        )}\n        {removeFromFavorites && (\n          <button onClick={() => removeFromFavorites(el.id)}>Удалить</button>\n        )}\n      </span>\n    </div>\n  );\n};\n\nexport default ServiceItem;\n","import React from \"react\";\nimport ServiceItem from \"../common/ServiceItem/ServiceItem\";\nimport classes from \"./ServiceList.module.css\";\n\nconst ServiceList = ({\n  serviceData,\n  addToFavorites,\n  totalServices,\n  lastUpdateDate,\n  favorites,\n  requestNextServicesList,\n  currentPage,\n  sort,\n  countSort,\n  sortType,\n  sortDirect,\n}) => {\n  return (\n    <div className={classes.serviceList}>\n      <div className={classes.serviceListHeader}>\n        <span className={`${classes.about} ${classes.itemsHeader}`}>\n          Всего Инструментов: <b>{totalServices}</b> Обновлено:{\" \"}\n          <b>{lastUpdateDate}</b>\n        </span>\n        <span className={classes.partners}>\n          <span\n            className={`${classes.itemsHeader} ${\n              sortType === \"partners_count\" ? classes.activeButton : \"\"\n            }`}\n            onClick={() => sort(\"partners_count\", countSort)}\n          >\n            Партнеры{\" \"}\n            {sortType === \"partners_count\" && (countSort % 2 ? \" ∨\" : \" ∧\")}\n          </span>\n        </span>\n        <span className={classes.projects}>\n          <span\n            className={`${classes.itemsHeader} ${\n              sortType === \"works_count\" ? classes.activeButton : \"\"\n            }`}\n            onClick={() => sort(\"works_count\", countSort)}\n          >\n            Проекты{\" \"}\n            {sortType === \"works_count\" && (countSort % 2 ? \" ∨\" : \" ∧\")}\n          </span>\n        </span>\n        <span className={classes.rate}>\n          <span\n            className={`${classes.itemsHeader} ${\n              sortType === \"rate\" ? classes.activeButton : classes.rate\n            }`}\n            onClick={() => sort(\"rate\", countSort)}\n          >\n            Оценка{sortType === \"rate\" && (countSort % 2 ? \" ∨\" : \" ∧\")}\n          </span>\n        </span>\n        <span className={classes.changer}>В избранное</span>\n      </div>\n      <div>\n        {serviceData.map((el, i) => (\n          <ServiceItem\n            favorites={favorites}\n            number={i}\n            key={i}\n            el={el}\n            addToFavorites={addToFavorites}\n          />\n        ))}\n      </div>\n      <button\n        className={classes.downloadButton}\n        onClick={() =>\n          requestNextServicesList(currentPage + 1, sortType, sortDirect)\n        }\n      >\n        Загрузить еще\n      </button>\n    </div>\n  );\n};\n\nexport default ServiceList;\n","// import {createSelector} from \"reselect\";\n\nexport const getService = (state) => state.serviceListData.data;\nexport const getCurrentPage = (state) => state.serviceListData.current_page;\nexport const getLastUpdateDate = (state) =>\n  state.serviceListData.lastUpdateDate;\nexport const getTotalServices = (state) => state.serviceListData.total;\nexport const getCountSort = (state) => state.serviceListData.countSort;\nexport const getFavorites = (state) => state.serviceListData.favorites;\nexport const getSortType = (state) => state.serviceListData.sortType;\nexport const getSortDirect = (state) => state.serviceListData.sortDirect;\n// export const getFavorites = createSelector(getFavoritesSelector, el =>\n//   el.filter(() => true)\n// );\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport ServiceList from \"./ServiceList\";\nimport {\n  addToFavorites,\n  requestNextServicesList,\n  requestServices,\n  sort,\n} from \"../../Redux/service-list-reducer\";\nimport {\n  getCountSort,\n  getCurrentPage,\n  getFavorites,\n  getLastUpdateDate,\n  getService,\n  getSortDirect,\n  getSortType,\n  getTotalServices,\n} from \"../../Redux/selectors\";\n\nclass ServiceListContainer extends Component {\n  componentDidMount() {\n    if (!this.props.serviceData.length) {\n      const { currentPage } = this.props;\n      this.props.requestServices(currentPage);\n    }\n  }\n  // onPageChanged = (pageNumber) => {\n  //   this.props.requestServices(pageNumber);\n  // };\n  render() {\n    return (\n      <ServiceList\n        serviceData={this.props.serviceData}\n        addToFavorites={this.props.addToFavorites}\n        lastUpdateDate={this.props.lastUpdateDate}\n        totalServices={this.props.totalServices}\n        favorites={this.props.favorites}\n        requestNextServicesList={this.props.requestNextServicesList}\n        currentPage={this.props.currentPage}\n        sort={this.props.sort}\n        countSort={this.props.countSort}\n        sortType={this.props.sortType}\n        sortDirect={this.props.sortDirect}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  serviceData: getService(state),\n  currentPage: getCurrentPage(state),\n  lastUpdateDate: getLastUpdateDate(state),\n  totalServices: getTotalServices(state),\n  favorites: getFavorites(state),\n  countSort: getCountSort(state),\n  sortType: getSortType(state),\n  sortDirect: getSortDirect(state),\n});\n\nexport default connect(mapStateToProps, {\n  requestServices,\n  requestNextServicesList,\n  addToFavorites,\n  sort,\n})(ServiceListContainer);\n","import React from \"react\";\nimport ServiceItem from \"../common/ServiceItem/ServiceItem\";\nimport classes from \"./Favorites.module.css\";\n\nconst Favorites = ({ favorites, removeFromFavorites }) => {\n  if (!favorites.length)\n    return <h2 className={classes.nothing}>Избранных инструментов нет</h2>;\n\n  return (\n    <div className={classes.favorites}>\n      <div className={classes.favoritesHeader}>\n        <span className={classes.logotype}> </span>\n        <span className={classes.name}>Название</span>\n        <span className={classes.partners}>Партнеры</span>\n        <span className={classes.projects}>Проекты</span>\n        <span className={classes.rate}>Оценка</span>\n        <span className={classes.changer}>Удалить</span>\n      </div>\n      <div>\n        {favorites.map((el, i) => (\n          <ServiceItem\n            number={i}\n            key={i}\n            el={el}\n            removeFromFavorites={removeFromFavorites}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Favorites;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Favorites from \"./Favorites\";\nimport { removeFromFavorites } from \"../../Redux/service-list-reducer\";\nimport { getFavorites, getService } from \"../../Redux/selectors\";\n\nclass FavoritesContainer extends Component {\n  componentDidMount() {\n    // this.props.requestFavorites();\n  }\n\n  // onPageChanged = (pageNumber) => {\n  //   this.props.requestServices(pageNumber);\n  // };\n\n  render() {\n    return (\n      <Favorites\n        favorites={this.props.favorites}\n        removeFromFavorites={this.props.removeFromFavorites}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  favorites: getFavorites(state),\n  serviceData: getService(state),\n});\n\nexport default connect(mapStateToProps, { removeFromFavorites })(\n  FavoritesContainer\n);\n","import React from \"react\";\nimport classes from \"./NavBar.module.css\";\nimport { NavLink } from \"react-router-dom\";\n\nconst NavBar = ({ favorites }) => {\n  return (\n    <nav className={classes.nav}>\n      <div className={classes.logotype}>\n        <div className={classes.firstRow}>CMS</div>\n        <div className={classes.secondRow}>\n          <span>magazine</span>\n          <span>ВСЕ О DIGITAL</span>\n        </div>\n      </div>\n      <div className={`${classes.item} ${classes.active}`}>\n        <NavLink to=\"/instruments\" activeClassName={classes.activeLink}>\n          <span>Инструменты</span>\n        </NavLink>\n      </div>\n      <div className={`${classes.item} ${classes.active}`}>\n        <NavLink to=\"/favorites\" activeClassName={classes.activeLink}>\n          <span>Избранное</span>\n          &nbsp;\n          {favorites.length ? (\n            <span className={classes.countPages}>\n              &nbsp;{favorites.length}&nbsp;\n            </span>\n          ) : (\n            \"\"\n          )}\n        </NavLink>\n      </div>\n    </nav>\n  );\n};\n\nexport default NavBar;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getFavorites } from \"../../Redux/selectors\";\nimport NavBar from \"./NavBar\";\n\nclass NavBarContainer extends Component {\n  render() {\n    return <NavBar favorites={this.props.favorites} />;\n  }\n}\n\nconst mapStateToProps = (state) => ({ favorites: getFavorites(state) });\n\nexport default connect(mapStateToProps, {})(NavBarContainer);\n","import React from \"react\";\nimport \"./App.css\";\nimport {\n  BrowserRouter as Router,\n  Redirect,\n  Route,\n  Switch,\n} from \"react-router-dom\";\nimport ServiceListContainer from \"./Components/ServiceList/ServiceListContainer\";\nimport FavoritesContainer from \"./Components/Favorites/FavoritesContainer\";\nimport NavBarContainer from \"./Components/NavBar/NavBarContainer\";\n\nconst App = () => {\n  return (\n    <Router basename=\"/test-project-proactivity-group\">\n      <div className=\"app-wrapper\">\n        <NavBarContainer />\n        <div className=\"app-wrapper-content\">\n          <Switch>\n            <Route\n              exact\n              path=\"/\"\n              render={() => <Redirect to={\"/instruments\"} />}\n            />\n            <Route\n              path=\"/instruments\"\n              render={() => <ServiceListContainer />}\n            />\n            <Route path=\"/favorites\" render={() => <FavoritesContainer />} />\n            <Route path=\"*\" render={() => <h1>Страница не найдена</h1>} />\n          </Switch>\n        </div>\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n","import { compose } from \"redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport App from \"./App\";\r\n\r\nconst mapStateToProps = () => ({});\r\nconst AppContainer = compose(withRouter, connect(mapStateToProps, {}))(App);\r\n\r\nexport default AppContainer;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./Redux/store\";\nimport AppContainer from \"./AppContainer\";\n\nwindow.store = store;\n\nconst AppShopServices = () => {\n  return (\n    <React.StrictMode>\n      <Router>\n        <Provider store={store}>\n          <AppContainer />\n        </Provider>\n      </Router>\n    </React.StrictMode>\n  );\n};\nexport default AppShopServices;\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport AppShopServices from \"./AppShopServices\";\r\n\r\nReactDOM.render(<AppShopServices />, document.getElementById(\"root\"));\r\n\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"NavBar_nav__Rfdgw\",\"logotype\":\"NavBar_logotype__3afuu\",\"firstRow\":\"NavBar_firstRow__S-da9\",\"secondRow\":\"NavBar_secondRow__22E0O\",\"item\":\"NavBar_item__NcN4s\",\"activeLink\":\"NavBar_activeLink__tvnqb\",\"countPages\":\"NavBar_countPages__evf4A\"};"],"sourceRoot":""}